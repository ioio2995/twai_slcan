name: CI

on:
  push:
    branches: [ "master" ]
    tags:
     - 'v*'
  pull_request:
    branches: [ "master" ]
jobs:
  Build:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1.1.0
      with:
        target: esp32s3
  Deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1.1.0
      with:
        target: esp32s3
    - name: Build binary
      run: |
        zip twai_sclan build/bootloader/bootloader.bin build/partition_table/partition-table.bin build/${{ github.event.repository.name }}.bin
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./twai_sclan.zip
        asset_name: twai_sclan.zip
        asset_content_type: application/zip

